Integer overflows and underflows are not a new class of vulnerability, but they are especially dangerous in smart contracts, where unsigned integers are prevalent and most developers are used to simple int types (which are often just signed integers). If overflows occur, many benign-seeming codepaths become vectors for theft or denial of service.

The vulnerability lies in line 18:         count += input;

The vulnerability lies in line 24:         count *= input;

The vulnerability lies in line 30:         count -= input;

The vulnerability lies in line 36:         uint res = count + input;

The vulnerability lies in line 42:         uint res = count * input;

The vulnerability lies in line 48:        	uint res = count - input;

